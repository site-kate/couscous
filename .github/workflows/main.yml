name: RDP via Cloudflared (Anonymous Tunnel)

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 240  # 4 hours
    steps:
      - name: Download cloudflared
        run: |
          Invoke-WebRequest -Uri https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe -OutFile cloudflared.exe

      - name: Enable and start RDP
        run: |
          Set-Service -Name TermService -StartupType Automatic
          Start-Service -Name TermService
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Set random password for current user
        id: userinfo
        shell: pwsh
        run: |
          $username = $env:USERNAME
          $length = 20
          $password = -join ((48..57) + (65..90) + (97..122) + (33..38) + (64..95) | Get-Random -Count $length | ForEach-Object {[char]$_})
          net user $username $password
          echo "username=$username" >> $env:GITHUB_OUTPUT
          echo "password=$password" >> $env:GITHUB_OUTPUT

      - name: Start cloudflared tunnel (anonymous)
        shell: pwsh
        run: |
          Start-Process -NoNewWindow -FilePath .\cloudflared.exe -ArgumentList "tunnel --url rdp://localhost:3389"
          Start-Sleep -Seconds 10

      - name: Show connection instructions
        shell: pwsh
        run: |
          Write-Host "RDP Username: ${{ steps.userinfo.outputs.username }}"
          Write-Host "RDP Password: ${{ steps.userinfo.outputs.password }}"
          Write-Host ""
          Write-Host "Check the logs for the previous ('Start cloudflared tunnel') step."
          Write-Host "It will contain a 'trycloudflare.com' URL."
          Write-Host ""
          Write-Host "On your local machine, download cloudflared and run:"
          Write-Host "    cloudflared access rdp --hostname <your-trycloudflare-url> --url rdp://localhost:3389"
          Write-Host "Then, open Remote Desktop Client and connect to 127.0.0.1:3389"
          Write-Host ""
          Write-Host "⚠️ The tunnel is PUBLIC. Anyone with the URL can access the port until the job completes."

      - name: Keep runner alive for 4 hours
        run: |
          for ($i=0; $i -lt 240; $i++) {
            Write-Host "Runner alive: $i minute(s)"
            Start-Sleep -Seconds 60
          }
